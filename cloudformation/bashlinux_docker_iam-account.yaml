---
# Bashlinux::Docker::IAM::Account
#
#   Cloudformation template to deploy the IAM credentials and policies
#   for granting access on ECR to the Docker build server
#
#   Manuel F Martinez
#   Bashlinux
#   Los Angeles, CA
#
AWSTemplateFormatVersion: "2010-09-09"
Description: Docker IAM permissions template

###############################################################################
Parameters:

  DevOpsBucketName:
    Description: Name of the s3 bucket where the DevOps assets are retrieved
    Type: String
    MinLength: "8"
    MaxLength: "32"
    ConstraintDescription: Length of the name must be between 8 to 32 characters

  Environment:
    Description: VPC environment
    Type: String
    MinLength: "1"
    MaxLength: "20"
    Default: staging
    AllowedValues: [ "prod", "staging" ]
    ConstraintDescription: Can only contain "prod" or "staging".

  Organization:
    Description: Organization or Customer name
    Type: String
    MinLength: "1"
    MaxLength: "32"
    Default: gesvi
    AllowedPattern: "[a-zA-Z0-9\\-]*"
    ConstraintDescription: >
      Name of the organization must contains only letters, numbers and hyphens

###############################################################################
Resources:

  # IAM permissions and credentials -------------------------------------------
  DockerIamGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: bashlinux-docker
      Path: "/bashlinux/"

  DockerIamManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy for Docker to gain access to the ECR 
      ManagedPolicyName: bashlinux-docker-policy
      Path: "/bashlinux/"
      PolicyDocument:
        "Fn::Transform":
          Name: AWS::Include
          Parameters:
            Location: !Sub "s3://${DevOpsBucketName}/iam-policies/iam_policy_bashlinux_docker_${Environment}.json"
      Groups: [ !Ref DockerIamGroup ]

  DockerIamUser:
    Type: AWS::IAM::User
    Properties:
      UserName: docker
      Path: "/serviceaccounts/"
      Groups:
      - !Ref DockerIamGroup
      Tags:
      - Key: Name
        Value: docker
      - Key: bashlinux:application-id
        Value: !Ref AWS::StackName
      - Key: bashlinux:network-visibility
        Value: public
      - Key: bashlinux:registry-type
        Value: private
      - Key: bashlinux:can-delete
        Value: "false"

  DockerIamAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DockerIamUser

###############################################################################
Outputs:

  DockerAccessKeyId:
    Value: !Ref DockerIamAccessKey
    Description: IAM Access Key ID for Docker build server
  DockerSecretAccessKey:
    Value: !GetAtt [DockerIamAccessKey, SecretAccessKey]
    Description: IAM Secret Access Key for Docker build server
